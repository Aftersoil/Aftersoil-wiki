(window.webpackJsonp=window.webpackJsonp||[]).push([[53],{563:function(s,t,a){"use strict";a.r(t);var n=a(12),e=Object(n.a)({},(function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h1",{attrs:{id:"数据类型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#数据类型"}},[s._v("#")]),s._v(" 数据类型")]),s._v(" "),a("p",[s._v("数据分为原始类型和引用类型")]),s._v(" "),a("p",[s._v("原始类型分为 "),a("a",{attrs:{href:"#%E6%95%B0%E5%80%BC%E5%9E%8B"}},[s._v("数值型")]),s._v("、"),a("a",{attrs:{href:"#%E5%AD%97%E7%AC%A6%E4%B8%B2%E5%9E%8B"}},[s._v("字符串型")]),s._v("、"),a("a",{attrs:{href:"#%E5%B8%83%E5%B0%94%E5%9E%8B"}},[s._v("布尔型")]),s._v("、"),a("a",{attrs:{href:"#%E6%9C%AA%E5%AE%9A%E4%B9%89%E5%9E%8B"}},[s._v("未定义型")]),s._v("、"),a("a",{attrs:{href:"#%E7%A9%BA"}},[s._v("空")])]),s._v(" "),a("h2",{attrs:{id:"数值型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#数值型"}},[s._v("#")]),s._v(" 数值型")]),s._v(" "),a("p",[s._v("分为整型和浮点型")]),s._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("整型在内存中占4个字节，浮点型占8个字节\n八进制     以0开头\n十六进制   以0X开头，a~f 代表10~15  不区分大小写\n0XFF      255\n")])])]),a("p",[s._v("浮点型分为定点小数和指数型小数")]),s._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v(" 3140   3.14e3   指数\t\n-0.314  3.14e-1    \n3.14\n")])])]),a("div",{staticClass:"custom-block danger"},[a("p",{staticClass:"custom-block-title"},[s._v("WARNING")]),s._v(" "),a("p",[a("code",[s._v("typeof")]),s._v("   检测数据类型")])]),s._v(" "),a("h2",{attrs:{id:"字符串型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#字符串型"}},[s._v("#")]),s._v(" 字符串型")]),s._v(" "),a("p",[s._v("数据被引号所包含就是字符串型，不区分单双引号")]),s._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 查看任意一个字符的Unicode码")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'然'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("charCodeAt")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("   "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//28982")]),s._v("\n")])])]),a("h2",{attrs:{id:"布尔型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#布尔型"}},[s._v("#")]),s._v(" 布尔型")]),s._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("true")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),a("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("false")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 在程序中表示真或者假")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 用于一些比较的结果，还有一些是否的结果，例如是否登录，是否注册，是否在售...")]),s._v("\n")])])]),a("h2",{attrs:{id:"未定义型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#未定义型"}},[s._v("#")]),s._v(" 未定义型")]),s._v(" "),a("p",[s._v("声明了变量未赋值，结果就是 "),a("code",[s._v("undefined")])]),s._v(" "),a("h2",{attrs:{id:"空-null"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#空-null"}},[s._v("#")]),s._v(" 空——null")]),s._v(" "),a("p",[s._v("只有一个值null，将来会和引用类型一起使用")]),s._v(" "),a("h2",{attrs:{id:"数据类型转换"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#数据类型转换"}},[s._v("#")]),s._v(" 数据类型转换")]),s._v(" "),a("h2",{attrs:{id:"隐式转换"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#隐式转换"}},[s._v("#")]),s._v(" 隐式转换")]),s._v(" "),a("ul",[a("li",[s._v("在运算的过程中，自动的发生转换")])]),s._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 数字+字符串  数字被转成字符串")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'3'")]),s._v("   "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//'23'")]),s._v("\n")])])]),a("ul",[a("li",[s._v("数字+布尔型   布尔型转成数字  "),a("code",[s._v("true->1 false->0")])])]),s._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("true")]),s._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//4")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("false")]),s._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//3")]),s._v("\n")])])]),a("ul",[a("li",[s._v("布尔型+字符串  布尔型转成字符串")])]),s._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'5'")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("true")]),s._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//'5true'")]),s._v("\n")])])]),a("h2",{attrs:{id:"js中加号-的作用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#js中加号-的作用"}},[s._v("#")]),s._v(" JS中加号(+)的作用")]),s._v(" "),a("p",[s._v("执行加法运算"),a("br"),s._v("\n执行字符串间的拼接")]),s._v(" "),a("h2",{attrs:{id:"减法-、乘法-、除法-隐式转换"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#减法-、乘法-、除法-隐式转换"}},[s._v("#")]),s._v(" 减法(-)、乘法(*)、除法(/)隐式转换")]),s._v(" "),a("p",[s._v("将运算符两端的数据转为数值型，如果转换失败，返回"),a("code",[s._v("NaN(Not a Number)")]),s._v("，不是一个数字，任何值和"),a("code",[s._v("NaN")]),s._v("执行加减乘除都会返回"),a("code",[s._v("NaN")]),s._v("；自动调用了"),a("code",[s._v("Number")]),s._v("转换成数值型。")]),s._v(" "),a("details",{staticClass:"custom-block details"},[a("summary",[s._v("练习：查看以下程序的运行结果")]),s._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" num1 "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  num2 "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("true")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  num3 "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'tedu'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("num1 "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" num2 "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" num3"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//'4tedu'")]),s._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("num2 "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" num3 "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" num1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("  "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'truetedu3'")]),s._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("num3 "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" num1 "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" num2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("  "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'tedu3true'")]),s._v("\n")])])])]),s._v(" "),a("h2",{attrs:{id:"强制转换"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#强制转换"}},[s._v("#")]),s._v(" 强制转换")]),s._v(" "),a("ul",[a("li",[s._v("强制转为数值型")])]),s._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("Number")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("Number")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'2'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("        "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//2")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("Number")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("true")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("       "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//1")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("Number")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'2a'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("       "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//NaN")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("Number")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("undefined")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//NaN")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("Number")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("null")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("       "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//0")]),s._v("\n")])])]),a("ul",[a("li",[s._v("强制转换为整型")])]),s._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("parseInt")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 常用于将字符串或者数字转为整型，其它的数据返回NaN，如果要转换的字符串开头是非数字，则返回NaN")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" a "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"1"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("parseInt")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])])]),a("ul",[a("li",[s._v("强制转为浮点型")])]),s._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("parseFloat")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 和parseInt的用法基本一致，只是转换为浮点型数据")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// '2.5a'   'a2.5'")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("parseFloat")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"2.5a"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 2.5")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("parseFloat")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"a2.5"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// NaN")]),s._v("\n")])])]),a("ul",[a("li",[s._v("强制将数值型和布尔型转为字符串型")])]),s._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("toString")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" num"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("10")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\nnum"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("toString")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// '10'")]),s._v("\n")])])]),a("h2",{attrs:{id:"运算符"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#运算符"}},[s._v("#")]),s._v(" 运算符")]),s._v(" "),a("p",[s._v("表达式：由运算符连接的操作数据，所组成的形式。")]),s._v(" "),a("p",[s._v("运算符分为"),a("a",{attrs:{href:"#%E7%AE%97%E6%9C%AF%E8%BF%90%E7%AE%97%E7%AC%A6"}},[s._v("算术运算符")]),s._v("、"),a("a",{attrs:{href:"#%E6%AF%94%E8%BE%83%E8%BF%90%E7%AE%97%E7%AC%A6"}},[s._v("比较运算符")]),s._v("、"),a("a",{attrs:{href:"#%E9%80%BB%E8%BE%91%E8%BF%90%E7%AE%97%E7%AC%A6"}},[s._v("逻辑运算符")]),s._v("、"),a("a",{attrs:{href:"#%E4%BD%8D%E8%BF%90%E7%AE%97%E7%AC%A6"}},[s._v("位运算符")]),s._v("、"),a("a",{attrs:{href:"#%E8%B5%8B%E5%80%BC%E8%BF%90%E7%AE%97%E7%AC%A6"}},[s._v("赋值运算符")]),s._v("、"),a("a",{attrs:{href:"#%E4%B8%89%E7%9B%AE%E8%BF%90%E7%AE%97%E7%AC%A6"}},[s._v("三目运算符")])]),s._v(" "),a("h4",{attrs:{id:"算术运算符"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#算术运算符"}},[s._v("#")]),s._v(" 算术运算符")]),s._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// +  -  *  /  %  ++  --")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// %   取余")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// ++  自增，在原来的基础之上加1")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// --   自减，在原来的基础之上减1")]),s._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("a"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("++")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 先打印a的值，然后执行自增")]),s._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("++")]),s._v("a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 先执行自增，然后打印a的值")]),s._v("\n")])])]),a("details",{staticClass:"custom-block details"},[a("summary",[s._v("练习")]),s._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" num "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v(" num"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),s._v("num "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])])])]),s._v(" "),a("h4",{attrs:{id:"比较运算符"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#比较运算符"}},[s._v("#")]),s._v(" 比较运算符")]),s._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/*\n  >  <  >=  <=  ==  !=  ===(全等于)  !==(全不等于)   返回一个布尔型的值\n  ==  比较两个值是否相等\n  ===  不仅比较值，还会比较类型是否相等\n  如果数据类型不同，会发生数据类型转换\n*/")]),s._v("\n\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'10'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 字符串转为数值   '10'->10")]),s._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'3'")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'10'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 两个字符串比较的是首个字符的Unicode码")]),s._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'10a'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("   "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// false")]),s._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'10a'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("   "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// false")]),s._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'10a'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// false")]),s._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("NaN")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("NaN")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// false")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// NaN和任何值比较(> < == >= <= ===)，包括自身，都返回false。")]),s._v("\n")])])]),a("h4",{attrs:{id:"逻辑运算符"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#逻辑运算符"}},[s._v("#")]),s._v(" 逻辑运算符")]),s._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&&")]),s._v("  并且  关联的两个条件都满足，结果是 "),a("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("true")]),s._v("，否则 "),a("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("false")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("||")]),s._v("  或者  关联的两个条件满足其一，结果是 "),a("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("true")]),s._v("，否则 "),a("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("false")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),s._v("   非    取反向  "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),a("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("true")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("false")]),s._v("   "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),a("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("false")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("true")]),s._v("\n")])])]),a("div",{staticClass:"custom-block danger"},[a("p",{staticClass:"custom-block-title"},[s._v("WARNING")]),s._v(" "),a("p",[s._v("注意事项：逻辑短路无需关注整个逻辑运算的结果是"),a("code",[s._v("true")]),s._v("还是"),a("code",[s._v("false")]),s._v("，重点是看是否会执行第二个条件")])]),s._v(" "),a("details",{staticClass:"custom-block details"},[a("summary",[s._v("练习：以下程序是否会保错")]),s._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" num "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\nnum "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("5")]),s._v("  "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&&")]),s._v("  console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\nnum "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("  "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("||")]),s._v("  console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])])]),a("p",[s._v("练习：声明变量保存年龄，如果满18岁，打印'成年人'")])]),s._v(" "),a("h4",{attrs:{id:"位运算符"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#位运算符"}},[s._v("#")]),s._v(" 位运算符")]),s._v(" "),a("p",[a("strong",[s._v("位运算(了解)")])]),s._v(" "),a("p",[s._v("在执行运算的时候，计算机会把数据转成二进制进行运算")]),s._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("1  10  11  100  101  110  111  1000  1001 1010\n      2        4                     8\n\n100101=100000+100+1\n  32 + 4 + 1 = 37\n\n1010110 = 1000000 + 10000 + 100 + 10\n  64 + 16 + 4 + 2=86\n25 = 16 + 8 + 1\n  10000 + 1000 + 1 = 11001\n\n按位与(&)  上下两位都是1，结果是1，否则是0\n按位或(|)  上下两位含有1，结果是1，否则是0\n按位异或(^)  上下两位不同为1，相同为0\n按位右移(>>)  删除二进制的最后一位\n按位左移(<<)  在最后一位的后边补0\n\n")])])]),a("h4",{attrs:{id:"赋值运算符"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#赋值运算符"}},[s._v("#")]),s._v(" 赋值运算符")]),s._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("=  +=  -=  *=  /=  %=\n")])])]),a("h4",{attrs:{id:"三目运算符"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#三目运算符"}},[s._v("#")]),s._v(" 三目运算符")]),s._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("一目  一个运算符连接一个数据   --  ++  !\n二目  一个运算符连接两个数据   + - * / ...\n三目  两个运算符连接三个数据\n条件表达式 ? 表达式1  :  表达式2\n如果条件表达式为 true ，执行表达式1\n如果条件表达式为 false ，执行表达式2\n\n练习：声明两个变量保存用户名和密码，如果用户名为root，并且密码为123456，打印登陆成功，否则打印登陆失败\n")])])]),a("h2",{attrs:{id:"课后任务"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#课后任务"}},[s._v("#")]),s._v(" 课后任务")]),s._v(" "),a("details",{staticClass:"custom-block details"},[a("summary",[s._v("练习")]),s._v(" "),a("p",[s._v("声明变量保存一个年份，判断这个年份是否为闰年，结合逻辑短路，如果是闰年，打印闰年"),a("br"),s._v("\n闰年：标准 ? 4 年一闰，100 不闰，400 再闰"),a("br"),s._v(" "),a("strong",[s._v("预习js中的流程控制")])])])])}),[],!1,null,null,null);t.default=e.exports}}]);