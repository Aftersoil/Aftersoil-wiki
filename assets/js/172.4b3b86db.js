(window.webpackJsonp=window.webpackJsonp||[]).push([[172],{523:function(s,t,e){"use strict";e.r(t);var a=e(12),n=Object(a.a)({},(function(){var s=this,t=s.$createElement,e=s._self._c||t;return e("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[e("h1",{attrs:{id:"分支管理"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#分支管理"}},[s._v("#")]),s._v(" 分支管理")]),s._v(" "),e("p",[s._v("现在已经创建、合并、删除了一些分支，让我们看看一些常用的分支管理工具。")]),s._v(" "),e("p",[e("code",[s._v("git branch")]),s._v(" 命令不只是可以创建与删除分支。 如果不加任何参数运行它，会得到当前所有分支的一个列表：")]),s._v(" "),e("div",{staticClass:"language-sh extra-class"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" branch\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#   iss53")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# * master")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#   testing")]),s._v("\n")])])]),e("p",[s._v("注意 master 分支前的 "),e("code",[s._v("*")]),s._v(" 字符："),e("strong",[s._v("它代表现在检出的那一个分")]),s._v("支（也就是说，"),e("strong",[s._v("当前 HEAD 指针所指向的分支")]),s._v("）。 这意味着如果在这时候提交，master 分支将会随着新的工作向前移动。 如果需要查看每一个分支的最后一次提交，可以运行 "),e("code",[s._v("git branch -v")]),s._v(" 命令：")]),s._v(" "),e("div",{staticClass:"language-sh extra-class"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" branch -v\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#   iss53   93b412c fix javascript issue")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# * master  7a98805 Merge branch 'iss53'")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#   testing 782fd34 add scott to the author list in the readmes")]),s._v("\n")])])]),e("p",[e("code",[s._v("–merged")]),s._v(" 与 "),e("code",[s._v("–no-merged")]),s._v(" 这两个有用的选项可以过滤这个列表中已经合并或尚未合并到当前分支的分支。 如果要查看哪些分支已经合并到当前分支，可以运行 "),e("code",[s._v("git branch –merged")]),s._v("：")]),s._v(" "),e("div",{staticClass:"language-sh extra-class"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" branch --merged\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#   iss53")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# * master")]),s._v("\n")])])]),e("p",[e("strong",[s._v("因为之前已经合并了")]),s._v(" "),e("code",[s._v("iss53")]),s._v(" 分支，所以现在看到它在列表中。 在这个列表中分支名字前没有 "),e("code",[s._v("*")]),s._v(" 号的分支通常可以使用 "),e("code",[s._v("git branch -d")]),s._v(" 删除掉；你已经将它们的工作整合到了另一个分支，所以并不会失去任何东西。")]),s._v(" "),e("p",[s._v("查看所有包含未合并工作的分支，可以运行 "),e("code",[s._v("git branch –no-merged")]),s._v("：")]),s._v(" "),e("div",{staticClass:"language-sh extra-class"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" branch --no-merged\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# testing")]),s._v("\n")])])]),e("p",[s._v("这里显示了其他分支。 因为它包含了还未合并的工作，尝试使用 "),e("code",[s._v("git branch -d")]),s._v(" 命令删除它时会失败：")]),s._v(" "),e("div",{staticClass:"language-sh extra-class"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" branch -d testing\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# error: The branch 'testing' is not fully merged.")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# If you are sure you want to delete it, run 'git branch -D testing'.")]),s._v("\n")])])]),e("p",[s._v("如果真的想要删除分支并丢掉那些工作，如同帮助信息里所指出的，可以使用 "),e("code",[s._v("-D")]),s._v(" 选项强制删除它。")])])}),[],!1,null,null,null);t.default=n.exports}}]);