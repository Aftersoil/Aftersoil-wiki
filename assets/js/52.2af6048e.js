(window.webpackJsonp=window.webpackJsonp||[]).push([[52],{545:function(s,t,a){"use strict";a.r(t);var n=a(14),e=Object(n.a)({},(function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h1",{attrs:{id:"流程控制"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#流程控制"}},[s._v("#")]),s._v(" 流程控制")]),s._v(" "),a("h2",{attrs:{id:"浏览器端函数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#浏览器端函数"}},[s._v("#")]),s._v(" 浏览器端函数")]),s._v(" "),a("p",[a("code",[s._v("alert()")]),s._v("  弹出警示(消息)框")]),s._v(" "),a("p",[a("code",[s._v("prompt()")]),s._v("  弹出提示(输入)框，需要使用变量来保存输入的值，类型默认是字符串类型，如果输")]),s._v(" "),a("p",[s._v("入框中内容为空，返回空字符('')，如果点击取消返回 null")]),s._v(" "),a("p",[s._v("练习：两次弹出提示框，输入数字，计算两个数字相加，打印结果。")]),s._v(" "),a("p",[a("strong",[s._v("程序 = 数据 + 算法")])]),s._v(" "),a("p",[s._v("程序分为顺序执行、选择执行、循环执行")]),s._v(" "),a("h2",{attrs:{id:"流程控制-选择执行"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#流程控制-选择执行"}},[s._v("#")]),s._v(" 流程控制——选择执行")]),s._v(" "),a("h2",{attrs:{id:"if语句"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#if语句"}},[s._v("#")]),s._v(" if语句")]),s._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("条件表达式"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 语句1;")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 语句2")]),s._v("\n")])])]),a("p",[a("code",[s._v("if")]),s._v(" 后的大括号中如果只有一行语句，则可以省略大括号")]),s._v(" "),a("h2",{attrs:{id:"if-else语句"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#if-else语句"}},[s._v("#")]),s._v(" if-else语句")]),s._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("条件表达式"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 语句1;")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("else")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 语句2;")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 在条件表达式中，有一些值默认代表false")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 0  NaN  ''  undefined   null")]),s._v("\n")])])]),a("p",[s._v("练习：弹出两次提示框，分别输入商品的单价和数量，获取总价，如果总价满1000打九折；假如卡内余额800，如果余额大于等于商品总额，警示框弹出'pay success'，否则警示框弹出'pay error'")]),s._v(" "),a("h2",{attrs:{id:"if-else嵌套"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#if-else嵌套"}},[s._v("#")]),s._v(" if-else嵌套")]),s._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("条件表达式"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 语句1")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("else")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("...")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("条件表达式n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 语句n;")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("else")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 语句n+1; // 以上所有的条件表达式都为false")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])])]),a("h2",{attrs:{id:"switch-case"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#switch-case"}},[s._v("#")]),s._v(" switch-case")]),s._v(" "),a("p",[s._v("是一种特殊的多项分支语句")]),s._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("switch")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("表达式"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//通常是一个变量")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("case")]),s._v(" 值"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//如果表达式的值为 值1")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//  语句1;")]),s._v("\n   "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("break")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("...")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("default")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//  语句n+1; //如果表达式的值和case中的每个值比较都是false")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 表达式在和case后的值比较的时候，使用的是全等于，要求值和类型都相同")]),s._v("\n")])])]),a("p",[s._v("对比"),a("code",[s._v("if-else")]),s._v("嵌套和"),a("code",[s._v("switch-case")]),s._v("的区别")]),s._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[s._v("TIP")]),s._v(" "),a("p",[s._v("相同点：两者都可以用于多项分支语句"),a("br"),s._v("\n不同点：if-else可以判断相等或者不等的情况，使用范围更广泛；switch-case只能用于全等于的比较，结构上更为清晰合理，执行效率更高。")])]),s._v(" "),a("h2",{attrs:{id:"循环"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#循环"}},[s._v("#")]),s._v(" 循环")]),s._v(" "),a("p",[s._v("循环：就是一遍又一遍执行相同或者相似的代码")]),s._v(" "),a("p",[s._v("循环的两个要素")]),s._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[s._v("TIP")]),s._v(" "),a("p",[s._v("循环的条件：循环的次数"),a("br"),s._v("\n循环体：重复执行的相同或者相似代码")])]),s._v(" "),a("h2",{attrs:{id:"while循环"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#while循环"}},[s._v("#")]),s._v(" while循环")]),s._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("while")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("循环条件"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 循环体")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])])]),a("ul",[a("li",[s._v("break")])]),s._v(" "),a("p",[s._v("在循环中，可以提前结束任何形式的循环")]),s._v(" "),a("details",{staticClass:"custom-block details"},[a("summary",[s._v("练习")]),s._v(" "),a("p",[s._v("声明变量保存任意一个数字，无限循环弹出提示框，并输入数字，如果输入的数字大于保存的数字，弹出警示框提示'big'，如果输入的数字小于保存的数字，弹出警示框提示'small'，否则弹出警示框提示'right'，结束循环。")])]),s._v(" "),a("p",[a("code",[s._v("isNaN()")]),s._v("  判断一个值是否为NaN   是->"),a("code",[s._v("true")]),s._v(" 不是->"),a("code",[s._v("false")])]),s._v(" "),a("h2",{attrs:{id:"do-while-循环"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#do-while-循环"}},[s._v("#")]),s._v(" do-while 循环")]),s._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("do")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 循环体")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("while")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("循环条件"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 先执行一遍循环体，然后再判断循环条件，即使循环条件为false，也会执行一遍循环体。")]),s._v("\n")])])]),a("details",{staticClass:"custom-block details"},[a("summary",[s._v("练习")]),s._v(" "),a("p",[s._v("声明变量保存123456，循环弹出提示框输入密码，如果输入正确结束循环。")])]),s._v(" "),a("h2",{attrs:{id:"for循环"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#for循环"}},[s._v("#")]),s._v(" for循环")]),s._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("表达式"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" 表达式"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" 表达式"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 循环体")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 表达式1：初始值")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 表达式2：循环条件")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 表达式3：增量")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("break")]),s._v(" 和 "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("continue")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("break")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 结束循环，后续不会再执行后续的循环")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("continue")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 跳过后边的循环体，继续执行增量，也就是下一次循环")]),s._v("\n\n")])])]),a("details",{staticClass:"custom-block details"},[a("summary",[s._v("练习")]),s._v(" "),a("p",[s._v("计算1~100之间所有偶数的和，如果遇到奇数跳过")])]),s._v(" "),a("h2",{attrs:{id:"循环嵌套"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#循环嵌套"}},[s._v("#")]),s._v(" 循环嵌套")]),s._v(" "),a("p",[s._v("任何的循环之间可以相互嵌套")]),s._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" i "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" i "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("9")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" i"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("++")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" j "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" j "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v(" i "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" j"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("++")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    document"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("write")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("j "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"*"')]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" i "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"="')]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" i "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v(" j"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v('// document.write(`${j} "*" ${i} = ${i * j}`);')]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n  document"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("write")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"<br />"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])])]),a("h2",{attrs:{id:"课后任务"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#课后任务"}},[s._v("#")]),s._v(" 课后任务")]),s._v(" "),a("details",{staticClass:"custom-block details"},[a("summary",[s._v("练习")]),s._v(" "),a("ul",[a("li",[s._v("打印本世纪(2000~2100)前10个闰年")]),s._v(" "),a("li",[s._v("计算1~100之间所有整数的和，当和大于4000的时候，提前结束循环，并打印当前的和")]),s._v(" "),a("li",[s._v("打印九九乘法表")]),s._v(" "),a("li",[a("strong",[s._v("预习JS中的函数，作用域")])])])])])}),[],!1,null,null,null);t.default=e.exports}}]);